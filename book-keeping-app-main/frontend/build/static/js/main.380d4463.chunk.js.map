{"version":3,"sources":["assets/img/book.jpg","assets/books.mp4","assets/img/bookpic.jpg","redux/actions/users/userActions.js","redux/actions/actionTypes.js","components/Header/Header.js","components/Home/Home.js","components/DisplayMessage/ErrorMessage.js","components/Loading/Loading.js","components/Login/Login.js","components/Register/Register.js","components/Profile/Profile.js","components/Books/Books.js","redux/actions/books/bookActions.js","components/Books/AddBook.js","components/DisplayMessage/SuccessMessage.js","components/UpdateProfile/UpdateProfile.js","components/Books/BookDetail.js","components/Users/Users.js","App.js","serviceWorker.js","redux/reducers/userAuthReducer.js","redux/reducers/userProfileReducer.js","redux/reducers/userUpdateReducer.js","redux/reducers/books/createdBookReducer.js","redux/reducers/books/booksListReducer.js","redux/reducers/books/bookDetailsReducer.js","redux/reducers/usersListReducer.js","redux/store/store.js","index.js"],"names":["module","exports","logoutUser","dispatch","a","localStorage","removeItem","type","error","Header","useDispatch","history","useHistory","userInfo","useSelector","state","userLogin","className","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabIndex","aria-labelledby","aria-hidden","data-dismiss","style","fontSize","href","target","onClick","role","aria-haspopup","name","push","placeholder","Home","autoPlay","loop","muted","src","videoSource","bookpg","alt","ErrorMessage","class","Loading","Login","useState","email","setemail","password","setpassword","userLoginDetails","loading","console","log","useEffect","onSubmit","e","preventDefault","config","headers","axios","post","data","payload","setItem","JSON","stringify","response","message","loginUser","htmlFor","value","onChange","aria-describedby","Register","setname","registerUser","undefined","Profile","getState","authorization","token","get","userProfile","user","books","width","pic","scope","map","book","key","_id","author","title","Books","bookslist","booksList","handlerDeleteBook","delete","deleteBook","length","color","cursor","AddBook","category","setCategory","setTitle","setAuthor","bookData","createdBy","defaultValue","SuccessMessage","msg","UpdateProfile","updatedUser","success","put","updateUser","BookDetail","useParams","bookDetails","fetchBook","updateBook","Users","usersList","users","App","exact","path","component","Boolean","window","location","hostname","match","userReducer","action","userProfileReducer","userUpdateReducer","createdBookReducer","booksListReducer","bookDetailReducer","usersListReducer","middleware","thunk","reducer","combineReducers","bookCreated","initialState","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.380d4463.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/book.6b532c17.jpg\";","module.exports = __webpack_public_path__ + \"static/media/books.b7941415.mp4\";","module.exports = __webpack_public_path__ + \"static/media/bookpic.3950ba7e.jpg\";","import axios from 'axios';\r\n\r\nimport {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGOUT,\r\n  USER_PROFILE_REQUEST,\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_FAIL,\r\n  FETCH_USERS_SUCCESS,\r\n} from '../actionTypes';\r\n\r\nexport const registerUser = (name, email, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: USER_REGISTER_REQUEST,\r\n      });\r\n\r\n      const config = {\r\n        headers: { 'Content-Type': 'application/json' },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        '/api/users',\r\n        {\r\n          name,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n      console.log(name, email, password);\r\n      dispatch({\r\n        type: USER_REGISTER_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      //Save the user into localstorage\r\n      localStorage.setItem('userAuthData', JSON.stringify(data));\r\n    } catch (error) {\r\n      console.log('mongdb error', error);\r\n      dispatch({\r\n        type: USER_REGISTER_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const loginUser = (email, password) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LOGIN_REQUEST,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.post(\r\n        '/api/users/login',\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      localStorage.setItem('userAuthData', JSON.stringify(data));\r\n    } catch (error) {\r\n      // Every error has a response.data where we can grab the error and display to the user\r\n      dispatch({\r\n        type: USER_LOGIN_FAIL,\r\n        payload: error.response.data.message, //The message is a key for our error message in our routes\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  return async dispatch => {\r\n    localStorage.removeItem('userAuthData');\r\n    try {\r\n      dispatch({\r\n        type: USER_LOGOUT,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\n//Since this is an authenticated request that need a token we have to get the token from store and pass it to our action\r\n//But lucky to us dispatch takes another argument which represent all our data in our store\r\n\r\nexport const getUserProfile = () => {\r\n  return async (dispatch, getState) => {\r\n    const { userInfo } = getState().userLogin;\r\n    try {\r\n      dispatch({\r\n        type: USER_PROFILE_REQUEST,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.get('/api/users/profile', config);\r\n      dispatch({\r\n        type: USER_PROFILE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_PROFILE_FAIL,\r\n        payload: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateUser = (name, email, password) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_REQUEST,\r\n        loading: true,\r\n      });\r\n      // Get the token of the user from store because that's what our endpoint need\r\n      const { userInfo } = getState().userLogin;\r\n      console.log(userInfo.token);\r\n      //Create a config and pass to axios for authentication\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n      const { data } = await axios.put(\r\n        '/api/users/profile/update',\r\n        { name, email, password },\r\n        config\r\n      );\r\n      dispatch({\r\n        type: USER_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchUsers = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: FETCH_USERS_REQUEST,\r\n        loading: true,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.get('/api/users', config);\r\n      dispatch({\r\n        type: FETCH_USERS_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_USERS_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n","//USER REGISTRATION\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\n//USER LOGIN\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\n//USER PROFILE\r\nexport const USER_PROFILE_REQUEST = 'USER_PROFILE_REQUEST';\r\nexport const USER_PROFILE_SUCCESS = 'USER_PROFILE_SUCCESS';\r\nexport const USER_PROFILE_FAIL = 'USER_PROFILE_FAIL';\r\n\r\n//USER UPDATE\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n\r\n// FETCH USERS\r\nexport const FETCH_USERS_REQUEST = 'FETCH_USERS_REQUEST';\r\nexport const FETCH_USERS_SUCCESS = 'FETCH_USERS_SUCCESS';\r\nexport const FETCH_USERS_FAIL = 'CREATE_USERS_FAIL';\r\n\r\n//BOOKS\r\n\r\nexport const CREATE_BOOK_REQUEST = 'CREATE_BOOK_REQUEST';\r\nexport const CREATE_BOOK_SUCCESS = 'CREATE_BOOK_SUCCESS';\r\nexport const CREATE_BOOK_FAIL = 'CREATE_BOOK_FAIL';\r\n\r\n// FETCH BOOKS\r\nexport const FETCH_BOOK_REQUEST = 'FETCH_BOOK_REQUEST';\r\nexport const FETCH_BOOK_SUCCESS = 'FETCH_BOOK_SUCCESS';\r\nexport const FETCH_BOOK_FAIL = 'CREATE_BOOK_FAIL';\r\n\r\n//DELETE BOOKS\r\nexport const DELETE_BOOK_REQUEST = 'DELETE_BOOK_REQUEST';\r\nexport const DELETE_BOOK_SUCCESS = 'DELETE_BOOK_SUCCESS';\r\nexport const DELETE_BOOK_FAIL = 'DELETE_BOOK_FAIL';\r\n\r\n//BOOK DETAILS\r\nexport const BOOK_DETAIL_REQUEST = 'BOOK_DETAIL_REQUEST';\r\nexport const BOOK_DETAIL_SUCCESS = 'BOOK_DETAIL_SUCCESS';\r\nexport const BOOK_DETAIL_FAIL = 'BOOK_DETAIL_FAIL';\r\n\r\n//UPDATE BOOKS\r\nexport const BOOK_UPDATE_REQUEST = 'BOOK_UPDATE_REQUEST';\r\nexport const BOOK_UPDATE_SUCCESS = 'BOOK_UPDATE_SUCCESS';\r\nexport const BOOK_UPDATE_FAIL = 'BOOK_UPDATE_FAIL';\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logoutUser } from '../../redux/actions/users/userActions';\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //logout handler\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logoutUser());\r\n    history.push('/');\r\n  };\r\n  return (\r\n    <header>\r\n      <nav className='navbar navbar-expand-lg navbar-dark bg-dark'>\r\n        <Link className='navbar-brand' to='/'>\r\n          BK\r\n        </Link>\r\n        <button\r\n          className='navbar-toggler'\r\n          type='button'\r\n          data-toggle='collapse'\r\n          data-target='#navbarColor01'\r\n          aria-controls='navbarColor01'\r\n          aria-expanded='false'\r\n          aria-label='Toggle navigation'>\r\n          <span className='navbar-toggler-icon'></span>\r\n        </button>\r\n\r\n        <div className='collapse navbar-collapse' id='navbarColor01'>\r\n          <ul className='navbar-nav m-auto'>\r\n            <li className='nav-item active'>\r\n              <Link className='nav-link' to='/'>\r\n                Home <span className='sr-only'>(current)</span>\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              {/* Modal  */}\r\n\r\n              <button\r\n                type='button'\r\n                className='btn btn-danger'\r\n                data-toggle='modal'\r\n                data-target='#about'>\r\n                About\r\n              </button>\r\n\r\n              <div\r\n                className='modal fade'\r\n                id='about'\r\n                tabIndex='-1'\r\n                aria-labelledby='exampleModalLabel'\r\n                aria-hidden='true'>\r\n                <div className='modal-dialog'>\r\n                  <div className='modal-content'>\r\n                    <div className='modal-header'>\r\n                      <h5 className='modal-title' id='exampleModalLabel'>\r\n                        App functionalities\r\n                      </h5>\r\n                      <button\r\n                        type='button'\r\n                        className='close'\r\n                        data-dismiss='modal'\r\n                        aria-label='Close'>\r\n                        <span aria-hidden='true'>&times;</span>\r\n                      </button>\r\n                    </div>\r\n                    <div className='modal-body'>\r\n                      <ul className='list-group'>\r\n                        <li className='list-group-item active'>\r\n                          <i\r\n                            className='fas fa-clipboard-list text-white mr-3'\r\n                            style={{ fontSize: '1.5rem' }}></i>\r\n                          Register User\r\n                          <hr />\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                          <i\r\n                            className='fas fa-clipboard-list text-white mr-3'\r\n                            style={{ fontSize: '1.5rem' }}></i>\r\n                          Update Profile\r\n                          <hr />\r\n                        </li>\r\n\r\n                        <li className='list-group-item'>\r\n                          <i\r\n                            className='fas fa-clipboard-list text-white mr-3'\r\n                            style={{ fontSize: '1.5rem' }}></i>\r\n                          Login\r\n                          <hr />\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                          <i\r\n                            className='fas fa-clipboard-list text-white mr-3'\r\n                            style={{ fontSize: '1.5rem' }}></i>\r\n                          User Dashboard\r\n                          <hr />\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                          <i\r\n                            className='fas fa-clipboard-list text-white mr-3'\r\n                            style={{ fontSize: '1.5rem' }}></i>\r\n                          List of Users\r\n                          <hr />\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                          <i\r\n                            className='fas fa-clipboard-list text-white mr-3'\r\n                            style={{ fontSize: '1.5rem' }}></i>\r\n                          List of Books\r\n                          <hr />\r\n                        </li>\r\n                        <li className='list-group-item'>\r\n                          <i\r\n                            className='fas fa-clipboard-list text-white mr-3'\r\n                            style={{ fontSize: '1.5rem' }}></i>\r\n                          Many more\r\n                          <hr />\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                    <div className='modal-footer'>\r\n                      <a\r\n                        className='mr-5'\r\n                        href='https://github.com/tweneboah'\r\n                        target='_'>\r\n                        developed by: i-NovoTec\r\n                      </a>\r\n                      <button\r\n                        type='button'\r\n                        className='btn btn-danger'\r\n                        data-dismiss='modal'>\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n\r\n            {userInfo ? (\r\n              <>\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/books'>\r\n                    Books\r\n                  </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/addbook'>\r\n                    Add book\r\n                  </Link>\r\n                </li>\r\n\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/users'>\r\n                    Users\r\n                  </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                  <Link\r\n                    className='nav-link'\r\n                    to='/login'\r\n                    onClick={() => dispatch(logoutUser())}>\r\n                    Logout\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/login'>\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n                <li className='nav-item'>\r\n                  <Link className='nav-link' to='/register'>\r\n                    Register\r\n                  </Link>\r\n                </li>\r\n              </>\r\n            )}\r\n\r\n            {/* Drop dowm */}\r\n            {userInfo ? (\r\n              <li className='nav-item dropdown'>\r\n                <a\r\n                  className='nav-link dropdown-toggle btn-dark'\r\n                  data-toggle='dropdown'\r\n                  href='/'\r\n                  role='button'\r\n                  aria-haspopup='true'\r\n                  aria-expanded='false'>\r\n                  {userInfo.name}\r\n                </a>\r\n                <div className='dropdown-menu'>\r\n                  <Link className='dropdown-item' to='/profile'>\r\n                    Profile\r\n                  </Link>\r\n                  <Link className='dropdown-item' to='/addbook'>\r\n                    Add book\r\n                  </Link>\r\n                  <Link className='dropdown-item' to='/books'>\r\n                    Books\r\n                  </Link>\r\n\r\n                  <div className='dropdown-divider'></div>\r\n                  <button onClick={logoutHandler} className='dropdown-item'>\r\n                    Logout\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n          </ul>\r\n          <form className='form-inline my-2 my-lg-0'>\r\n            <input\r\n              className='form-control mr-sm-2'\r\n              type='text'\r\n              placeholder='Search'\r\n            />\r\n            <button className='btn btn-secondary my-2 my-sm-0' type='submit'>\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Home.css';\r\nimport bookpg from '../../assets/img/book.jpg';\r\nimport videoSource from '../../assets/books.mp4';\r\nimport { Link } from 'react-router-dom';\r\nconst Home = () => {\r\n  return (\r\n    <div className='Container'>\r\n      <video autoPlay='autoplay' loop='loop' muted className='Video'>\r\n        <source src={videoSource} type='video/mp4' />\r\n        Your browser does not support the video tag.\r\n      </video>\r\n      <div className='Content'>\r\n        <div className='SubContent'>\r\n          <h1>Book Catolog</h1>\r\n          <p>Manage your Books with Ease</p>\r\n          <button type='button' className='btn btn-outline-dark'>\r\n            <Link to='/register'>Get started</Link>\r\n          </button>\r\n          <img src={bookpg} alt='profile' />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst ErrorMessage = ({ error }) => {\r\n  return (\r\n    <div class='alert alert-warning' role='alert'>\r\n      {error}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className='spinner-border' role='status'>\r\n      <span className='sr-only'>Loading...</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loginUser } from '../../redux/actions/users/userActions';\r\nimport ErrorMessage from '../DisplayMessage/ErrorMessage';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst Login = ({ history }) => {\r\n  const [email, setemail] = useState('');\r\n  const [password, setpassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //Before login in we will check if you have login the we redirect you\r\n\r\n  const userLoginDetails = useSelector(state => state.userLogin);\r\n\r\n  const { loading, userInfo, error } = userLoginDetails;\r\n  console.log(loading, userInfo, error);\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push('/');\r\n    }\r\n  }, [dispatch, userInfo, history]);\r\n  //submit form\r\n  const submitFormHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(loginUser(email, password));\r\n    console.log(email, password);\r\n  };\r\n\r\n  return (\r\n    <div className='row container-height'>\r\n      <div className='col-lg-6 col-md-6 m-auto'>\r\n        <div className='container'>\r\n          {loading && <Loading />}\r\n          {error && <ErrorMessage error={error} />}\r\n          <h1 className='text-center'>Login</h1>\r\n          <form onSubmit={submitFormHandler}>\r\n            <fieldset>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputEmail1'>Email address</label>\r\n                <input\r\n                  value={email}\r\n                  onChange={e => setemail(e.target.value)}\r\n                  type='email'\r\n                  className='form-control'\r\n                  id='exampleInputEmail1'\r\n                  aria-describedby='emailHelp'\r\n                  placeholder='Enter email'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputPassword1'>Password</label>\r\n                <input\r\n                  value={password}\r\n                  onChange={e => setpassword(e.target.value)}\r\n                  type='password'\r\n                  className='form-control'\r\n                  id='exampleInputPassword1'\r\n                  placeholder='Password'\r\n                />\r\n              </div>\r\n              <button type='submit' className='btn btn-info m-auto'>\r\n                Login\r\n              </button>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './Register.css';\r\nimport { registerUser } from '../../redux/actions/users/userActions';\r\nimport Loading from '../Loading/Loading';\r\nimport ErrorMessage from '../DisplayMessage/ErrorMessage';\r\n\r\nconst Register = ({ history }) => {\r\n  const [name, setname] = useState('');\r\n  const [email, setemail] = useState('');\r\n  const [password, setpassword] = useState('');\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo, loading, error } = userLogin;\r\n\r\n  //dispatch\r\n  const dispatch = useDispatch();\r\n  //submit\r\n  const formSubmitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(registerUser(name, email, password));\r\n    console.log(userInfo, loading, error);\r\n    if (userInfo !== null && error === undefined) history.push('/');\r\n  };\r\n\r\n  return (\r\n    <div className='row container-height'>\r\n      <div className='col-lg-6 col-md-6 m-auto'>\r\n        <div className='container'>\r\n          {loading && <Loading />}\r\n          {error && <ErrorMessage error={error} />}\r\n          <h1 className='text-center'>Register</h1>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            <fieldset>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputEmail1'>Name</label>\r\n                <input\r\n                  value={name}\r\n                  onChange={e => setname(e.target.value)}\r\n                  type='text'\r\n                  className='form-control'\r\n                  id='exampleInputEmail1'\r\n                  aria-describedby='emailHelp'\r\n                  placeholder='Enter Name'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputEmail1'>Email address</label>\r\n                <input\r\n                  value={email}\r\n                  onChange={e => setemail(e.target.value)}\r\n                  type='email'\r\n                  className='form-control'\r\n                  id='exampleInputEmail1'\r\n                  aria-describedby='emailHelp'\r\n                  placeholder='Enter email'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputPassword1'>Password</label>\r\n                <input\r\n                  value={password}\r\n                  onChange={e => setpassword(e.target.value)}\r\n                  type='password'\r\n                  className='form-control'\r\n                  id='exampleInputPassword1'\r\n                  placeholder='Password'\r\n                />\r\n              </div>\r\n              <button type='submit' className='btn btn-info m-auto'>\r\n                Register\r\n              </button>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useEffect } from 'react';\r\nimport './Profile.css';\r\nimport pic from '../../assets/img/bookpic.jpg';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getUserProfile } from '../../redux/actions/users/userActions';\r\nimport Loading from '../Loading/Loading';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Profile = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUserProfile());\r\n  }, [dispatch, history]);\r\n  //Check if user is login otherwise redirect\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  useEffect(() => {\r\n    if (userInfo === null) history.push('/login');\r\n  }, [userInfo, history]);\r\n\r\n  //Get user Profile\r\n  const userProfile = useSelector(state => state.userProfile);\r\n  const { loading, user } = userProfile;\r\n\r\n  const books = userProfile.user && userProfile.user.books;\r\n\r\n  const renderTable = () => {\r\n    if (books) {\r\n      return (\r\n        <table className='table table-hover'>\r\n          <thead>\r\n            <tr>\r\n              <th scope='col'>Author</th>\r\n              <th scope='col'>Book Name</th>\r\n              <th scope='col'>Delete</th>\r\n              <th scope='col'>Update</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {books.map(book => {\r\n              return (\r\n                <tr className='table-dark' key={book._id}>\r\n                  <th scope='row'>{book.author}</th>\r\n                  <td>{book.title}</td>\r\n                  <td>Delete</td>\r\n                  <td>Update</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <h1>You don't have any book created.</h1>\r\n          <Link>Start Creating</Link>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <div className='col mt-5'>\r\n          {loading && !user ? (\r\n            <Loading />\r\n          ) : (\r\n            <div className='card m-auto ' style={{ width: '50%' }}>\r\n              <img src={pic} className='card-img-top' alt='...' />\r\n              <div className='card-body'>\r\n                <h5 className='card-title'>{user && user.email}</h5>\r\n                <p className='card-text'>{user && user.name}</p>\r\n                <Link to='/user-update' className='btn btn-primary'>\r\n                  Update your profile\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='row'>\r\n        <div className='col'>{renderTable()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetchBooks, deleteBook } from '../../redux/actions/books/bookActions';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst Books = ({ history }) => {\r\n  //Fetch books\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchBooks());\r\n  }, [dispatch]);\r\n  const bookslist = useSelector(state => state.booksList);\r\n  const { books, loading } = bookslist;\r\n  // End of fetch books\r\n\r\n  //Delete book handler\r\n  const handlerDeleteBook = id => {\r\n    dispatch(deleteBook(id));\r\n    history.push('/books');\r\n  };\r\n  return (\r\n    <div>\r\n      {loading && <Loading />}\r\n      {books !== undefined && books.length === 0 ? (\r\n        'No'\r\n      ) : (\r\n        <div className='row'>\r\n          <div className='col'>\r\n            <table className='table table-hover'>\r\n              <thead>\r\n                <tr>\r\n                  <th scope='col'>Author</th>\r\n                  <th scope='col'>Book Name</th>\r\n                  <th scope='col'>Action</th>\r\n                  <th scope='col'>Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {books &&\r\n                  books.map(book => {\r\n                    return (\r\n                      <tr className='table-dark' key={book._id}>\r\n                        <th scope='row'>{book.title}</th>\r\n                        <td>{book.author}</td>\r\n                        <td>\r\n                          <i\r\n                            onClick={() => handlerDeleteBook(book._id)}\r\n                            className='fas fa-trash '\r\n                            style={{ color: 'red', cursor: 'progress' }}></i>\r\n                        </td>\r\n                        <td>\r\n                          <Link to={`/book/${book && book._id}`}>\r\n                            <i\r\n                              className='far fa-edit'\r\n                              style={{\r\n                                color: 'yellow',\r\n                                cursor: 'progress',\r\n                              }}></i>\r\n                          </Link>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Books;\r\n","import axios from 'axios';\r\nimport {\r\n  CREATE_BOOK_FAIL,\r\n  CREATE_BOOK_REQUEST,\r\n  CREATE_BOOK_SUCCESS,\r\n  FETCH_BOOK_FAIL,\r\n  FETCH_BOOK_REQUEST,\r\n  FETCH_BOOK_SUCCESS,\r\n  DELETE_BOOK_FAIL,\r\n  DELETE_BOOK_SUCCESS,\r\n  DELETE_BOOK_REQUEST,\r\n  BOOK_DETAIL_SUCCESS,\r\n  BOOK_DETAIL_FAIL,\r\n  BOOK_DETAIL_REQUEST,\r\n  BOOK_UPDATE_SUCCESS,\r\n  BOOK_UPDATE_REQUEST,\r\n  BOOK_UPDATE_FAIL,\r\n} from '../actionTypes';\r\n\r\n//Create book\r\n\r\nexport const createBook = bookData => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: CREATE_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.post('/api/books', bookData, config);\r\n\r\n      dispatch({\r\n        type: CREATE_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: CREATE_BOOK_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//Fetch all books\r\n\r\nexport const fetchBooks = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: FETCH_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.get('/api/books', config);\r\n\r\n      dispatch({\r\n        type: FETCH_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: FETCH_BOOK_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//delete a book\r\n\r\nexport const deleteBook = id => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: DELETE_BOOK_REQUEST,\r\n        loading: true,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.delete(`/api/books/${id}`, config);\r\n      dispatch({\r\n        type: DELETE_BOOK_SUCCESS,\r\n        payload: data,\r\n      });\r\n\r\n      dispatch({\r\n        type: FETCH_BOOK_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: DELETE_BOOK_FAIL,\r\n        loading: false,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//Fetch a signle book\r\nexport const fetchBook = (id, bookData) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: BOOK_DETAIL_REQUEST,\r\n        loading: true,\r\n      });\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.get(`/api/books/${id}`, bookData, config);\r\n\r\n      dispatch({\r\n        type: BOOK_DETAIL_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: BOOK_DETAIL_FAIL,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n//UPDATE BOOK\r\n\r\nexport const updateBook = (id, bookData) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({\r\n        type: BOOK_UPDATE_REQUEST,\r\n        loading: true,\r\n      });\r\n\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      const { data } = await axios.put(`/api/books/${id}`, bookData, config);\r\n      dispatch({\r\n        type: BOOK_UPDATE_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: BOOK_UPDATE_FAIL,\r\n        loading: false,\r\n        error: error.response && error.response.data.message,\r\n      });\r\n    }\r\n  };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { createBook } from '../../redux/actions/books/bookActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst AddBook = ({ history }) => {\r\n  const [category, setCategory] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [author, setAuthor] = useState('');\r\n\r\n  //Get the user id from store\r\n\r\n  const userLogin = useSelector(state => state.userLogin);\r\n\r\n  const { userInfo } = userLogin;\r\n  console.log(userInfo._id);\r\n  //dispatch action\r\n  const dispatch = useDispatch();\r\n\r\n  const formSubmitHandler = e => {\r\n    const data = {\r\n      category,\r\n      title,\r\n      author,\r\n      createdBy: userInfo && userInfo._id,\r\n    };\r\n    e.preventDefault();\r\n    dispatch(createBook(data));\r\n    history.push('/books');\r\n  };\r\n  console.log(category);\r\n  return (\r\n    <div className='row container-height'>\r\n      <div className='col-lg-6 col-md-6 m-auto'>\r\n        <div className='container'>\r\n          <button\r\n            type='button'\r\n            className='btn btn-primary'\r\n            data-toggle='modal'\r\n            data-target='#exampleModal'>\r\n            Click to add Book.\r\n          </button>\r\n\r\n          <div\r\n            className='modal fade'\r\n            id='exampleModal'\r\n            tabIndex='-1'\r\n            aria-labelledby='exampleModalLabel'\r\n            aria-hidden='true'>\r\n            <div className='modal-dialog'>\r\n              <div className='modal-content'>\r\n                <div className='modal-header'>\r\n                  <h5 className='modal-title' id='exampleModalLabel'>\r\n                    Create Book\r\n                  </h5>\r\n                  <button\r\n                    type='button'\r\n                    className='close'\r\n                    data-dismiss='modal'\r\n                    aria-label='Close'>\r\n                    <span aria-hidden='true'>&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className='modal-body'>\r\n                  <h1 className='text-center'>Add Book</h1>\r\n                  <form onSubmit={formSubmitHandler}>\r\n                    <fieldset>\r\n                      <div className='form-group'>\r\n                        <select\r\n                          value={category}\r\n                          onChange={e => setCategory(e.target.value)}\r\n                          className='custom-select'>\r\n                          <option defaultValue='programming'>\r\n                            programming\r\n                          </option>\r\n                          <option value='religion'>Religion</option>\r\n                          <option value='life'>life</option>\r\n                          <option value='culture'>culture</option>\r\n                        </select>\r\n                      </div>\r\n                      <div className='form-group'>\r\n                        <label htmlFor='exampleInputEmail1'>Author </label>\r\n                        <input\r\n                          value={author}\r\n                          onChange={e => setAuthor(e.target.value)}\r\n                          type='text'\r\n                          className='form-control'\r\n                          id='exampleInputEmail1'\r\n                          aria-describedby='emailHelp'\r\n                          placeholder='Author name'\r\n                        />\r\n                      </div>\r\n                      <div className='form-group'>\r\n                        <label htmlFor='exampleInputPassword1'>title</label>\r\n                        <input\r\n                          value={title}\r\n                          onChange={e => setTitle(e.target.value)}\r\n                          type='text'\r\n                          className='form-control'\r\n                          id='exampleInputPassword1'\r\n                          placeholder='Book title'\r\n                        />\r\n                      </div>\r\n                      <button type='submit' className='btn btn-warning m-auto'>\r\n                        Create Book\r\n                      </button>\r\n                    </fieldset>\r\n                  </form>\r\n                </div>\r\n                <div className='modal-footer'>\r\n                  <button\r\n                    type='button'\r\n                    className='btn btn-danger'\r\n                    data-dismiss='modal'>\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddBook;\r\n","import React from 'react';\r\n\r\nconst SuccessMessage = ({ msg }) => {\r\n  return (\r\n    <div className='alert alert-success' role='alert'>\r\n      {msg}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessMessage;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { updateUser } from '../../redux/actions/users/userActions';\r\n\r\nimport SuccessMessage from '../DisplayMessage/SuccessMessage';\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n  //Get the user from localstorage and pass to the initial states\r\n  const userLogin = useSelector(state => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  console.log(userInfo);\r\n  const [name, setname] = useState(userInfo ? userInfo.name : '');\r\n  const [email, setemail] = useState(userInfo ? userInfo.email : '');\r\n  const [password, setpassword] = useState('');\r\n\r\n  console.log(userLogin);\r\n  //Get the updated user details from store and display message\r\n  const updatedUser = useSelector(state => state.updatedUser);\r\n  const { user, loading, success } = updatedUser;\r\n\r\n  //dispatch\r\n  const dispatch = useDispatch();\r\n  //submit\r\n  const formSubmitHandler = e => {\r\n    e.preventDefault();\r\n    dispatch(updateUser(name, email, password));\r\n  };\r\n\r\n  return (\r\n    <div className='row container-height'>\r\n      <div className='col-lg-6 col-md-6 m-auto'>\r\n        <div className='container'>\r\n          {user && !loading && success && (\r\n            <SuccessMessage msg='Updated successfully. Logout and login with your new credentials' />\r\n          )}\r\n          <h1 className='text-center'>Update</h1>\r\n\r\n          <form onSubmit={formSubmitHandler}>\r\n            <fieldset>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputEmail1'>Name</label>\r\n                <input\r\n                  value={name}\r\n                  onChange={e => setname(e.target.value)}\r\n                  type='text'\r\n                  className='form-control'\r\n                  id='exampleInputEmail1'\r\n                  aria-describedby='emailHelp'\r\n                  placeholder='Enter Name'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputEmail1'>Email address</label>\r\n                <input\r\n                  value={email}\r\n                  onChange={e => setemail(e.target.value)}\r\n                  type='email'\r\n                  className='form-control'\r\n                  id='exampleInputEmail1'\r\n                  aria-describedby='emailHelp'\r\n                  placeholder='Enter email'\r\n                />\r\n              </div>\r\n              <div className='form-group'>\r\n                <label htmlFor='exampleInputPassword1'>Password</label>\r\n                <input\r\n                  value={password}\r\n                  onChange={e => setpassword(e.target.value)}\r\n                  type='password'\r\n                  className='form-control'\r\n                  id='exampleInputPassword1'\r\n                  placeholder='Password'\r\n                />\r\n              </div>\r\n              <button type='submit' className='btn btn-primary m-auto'>\r\n                Update your profile\r\n              </button>\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProfile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchBook, updateBook } from '../../redux/actions/books/bookActions';\r\n\r\nconst BookDetail = ({ history }) => {\r\n  const { id } = useParams();\r\n\r\n  //Get the book details and fill it in the form\r\n  const bookDetails = useSelector(state => state.bookDetails);\r\n\r\n  const { book, loading } = bookDetails;\r\n\r\n  const [category, setCategory] = useState(book && !loading && book.category);\r\n  const [title, setTitle] = useState(book && !loading && book.title);\r\n  const [author, setAuthor] = useState(book && book.author);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchBook(id));\r\n  }, [dispatch, id]);\r\n\r\n  //dispatch action\r\n\r\n  const formSubmitHandler = e => {\r\n    const data = {\r\n      category,\r\n      title,\r\n      author,\r\n    };\r\n    e.preventDefault();\r\n    dispatch(updateBook(id, data));\r\n    history.push('/books');\r\n  };\r\n  return (\r\n    <div className='row container-height'>\r\n      <div className='col-lg-6 col-md-6 m-auto'>\r\n        <div className='container'>\r\n          {book ? (\r\n            <>\r\n              <h1 className='text-center'>Update</h1>\r\n              <form onSubmit={formSubmitHandler}>\r\n                <fieldset>\r\n                  <div className='form-group'>\r\n                    <select\r\n                      value={category}\r\n                      onChange={e => setCategory(e.target.value)}\r\n                      className='custom-select'>\r\n                      <option defaultValue='programming'>programming</option>\r\n                      <option value='religion'>Religion</option>\r\n                      <option value='life'>life</option>\r\n                      <option value='culture'>culture</option>\r\n                    </select>\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='exampleInputEmail1'>Author </label>\r\n                    <input\r\n                      value={author}\r\n                      onChange={e => setAuthor(e.target.value)}\r\n                      type='text'\r\n                      className='form-control'\r\n                      id='exampleInputEmail1'\r\n                      aria-describedby='emailHelp'\r\n                      placeholder='Author name'\r\n                    />\r\n                  </div>\r\n                  <div className='form-group'>\r\n                    <label htmlFor='exampleInputPassword1'>title</label>\r\n                    <input\r\n                      value={title}\r\n                      onChange={e => setTitle(e.target.value)}\r\n                      type='text'\r\n                      className='form-control'\r\n                      id='exampleInputPassword1'\r\n                      placeholder='Book title'\r\n                    />\r\n                  </div>\r\n                  <button type='submit' className='btn btn-dark m-auto'>\r\n                    Create Book\r\n                  </button>\r\n                </fieldset>\r\n              </form>\r\n            </>\r\n          ) : (\r\n            'No'\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookDetail;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchUsers } from '../../redux/actions/users/userActions';\r\nimport Loading from '../Loading/Loading';\r\n\r\nconst Users = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchUsers());\r\n  }, [dispatch]);\r\n  const usersList = useSelector(state => state.usersList);\r\n  const { loading, users, error } = usersList;\r\n\r\n  console.log(users, loading, error);\r\n  return (\r\n    <div className='container-fluid'>\r\n      <h1 className='text-center m-5'>List of users {users && users.length}</h1>\r\n      <hr className='text-white' />\r\n      <div className='row text-center justify-content-center'>\r\n        {loading ? (\r\n          <Loading />\r\n        ) : (\r\n          <>\r\n            {users &&\r\n              users.map(user => (\r\n                <div className='col-lg-3' key={user._id}>\r\n                  <div className='card'>\r\n                    <div className='card-body'>\r\n                      <h5 className='card-title'>{user.name}</h5>\r\n                      <p className='card-text'>{user.email}</p>\r\n                      <i className='far fa-address-card h2 text-info'></i>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport Home from './components/Home/Home';\r\nimport Login from './components/Login/Login';\r\nimport Register from './components/Register/Register';\r\nimport Profile from './components/Profile/Profile';\r\nimport Books from './components/Books/Books';\r\nimport AddBook from './components/Books/AddBook';\r\nimport UpdateProfile from './components/UpdateProfile/UpdateProfile';\r\nimport BookDetail from './components/Books/BookDetail';\r\nimport Users from './components/Users/Users';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Route exact path='/' component={Home} />\r\n        <Route exact path='/register' component={Register} />\r\n        <Route exact path='/login' component={Login} />\r\n        <Route exact path='/profile' component={Profile} />\r\n        <Route exact path='/books' component={Books} />\r\n        <Route exact path='/addbook' component={AddBook} />\r\n        <Route exact path='/user-update' component={UpdateProfile} />\r\n        <Route exact path='/book/:id' component={BookDetail} />\r\n        <Route exact path='/users' component={Users} />\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_REGISTER_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n} from '../actions/actionTypes';\r\n\r\nconst userReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    // Register\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case USER_REGISTER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: action.payload,\r\n      };\r\n    case USER_REGISTER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    // Login\r\n    case USER_LOGIN_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case USER_LOGIN_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        userInfo: action.payload,\r\n      };\r\n    case USER_LOGIN_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    // Logout\r\n    case USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import {\r\n  USER_PROFILE_SUCCESS,\r\n  USER_PROFILE_REQUEST,\r\n  USER_PROFILE_FAIL,\r\n} from '../actions/actionTypes';\r\n\r\nconst userProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    // Profile\r\n    case USER_PROFILE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case USER_PROFILE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        user: action.payload,\r\n      };\r\n    case USER_PROFILE_FAIL:\r\n      return {\r\n        loading: false,\r\n        payload: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userProfileReducer;\r\n","import {\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n} from '../actions/actionTypes';\r\n\r\nconst userUpdateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case USER_UPDATE_SUCCESS:\r\n      return {\r\n        user: action.payload,\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case USER_UPDATE_FAIL:\r\n      return {\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userUpdateReducer;\r\n","import {\r\n  CREATE_BOOK_FAIL,\r\n  CREATE_BOOK_REQUEST,\r\n  CREATE_BOOK_SUCCESS,\r\n} from '../../actions/actionTypes';\r\n\r\nconst createdBookReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_BOOK_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case CREATE_BOOK_SUCCESS:\r\n      return {\r\n        book: action.payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_BOOK_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default createdBookReducer;\r\n","import {\r\n  FETCH_BOOK_FAIL,\r\n  FETCH_BOOK_REQUEST,\r\n  FETCH_BOOK_SUCCESS,\r\n} from '../../actions/actionTypes';\r\n\r\nconst booksListReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOOK_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case FETCH_BOOK_SUCCESS:\r\n      return {\r\n        books: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_BOOK_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default booksListReducer;\r\n","import {\r\n  BOOK_DETAIL_FAIL,\r\n  BOOK_DETAIL_REQUEST,\r\n  BOOK_DETAIL_SUCCESS,\r\n} from '../../actions/actionTypes';\r\n\r\nconst bookDetailReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case BOOK_DETAIL_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case BOOK_DETAIL_SUCCESS:\r\n      return {\r\n        book: action.payload,\r\n        loading: false,\r\n      };\r\n    case BOOK_DETAIL_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default bookDetailReducer;\r\n","import {\r\n  FETCH_USERS_REQUEST,\r\n  FETCH_USERS_FAIL,\r\n  FETCH_USERS_SUCCESS,\r\n} from '../actions/actionTypes';\r\n\r\nconst usersListReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    // Register\r\n    case FETCH_USERS_REQUEST:\r\n      return { loading: true };\r\n    case FETCH_USERS_SUCCESS:\r\n      return {\r\n        users: action.payload,\r\n      };\r\n    case FETCH_USERS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersListReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport userReducer from '../reducers/userAuthReducer';\r\nimport userProfileReducer from '../reducers/userProfileReducer';\r\nimport userUpdateReducer from '../reducers/userUpdateReducer';\r\nimport createdBookReducer from '../reducers/books/createdBookReducer';\r\nimport booksListReducer from '../reducers/books/booksListReducer';\r\nimport bookDetailReducer from '../reducers/books/bookDetailsReducer';\r\nimport usersListReducer from '../reducers/usersListReducer';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducer = combineReducers({\r\n  userLogin: userReducer,\r\n  userProfile: userProfileReducer,\r\n  updatedUser: userUpdateReducer,\r\n  bookCreated: createdBookReducer,\r\n  booksList: booksListReducer,\r\n  bookDetails: bookDetailReducer,\r\n  usersList: usersListReducer,\r\n});\r\n\r\n//store\r\n//Initial state\r\n\r\n//This is the initial state for all the reducers. NOTE the keys of the reducers above must be the same as the one you will pass as initialstate\r\n//The key must be the same and secondly look at the way the structure of the data in the store\r\n\r\n//Get the user in local storage\r\n\r\nconst userAuthFromStorage = localStorage.getItem('userAuthData')\r\n  ? JSON.parse(localStorage.getItem('userAuthData'))\r\n  : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userAuthFromStorage },\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/store/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}